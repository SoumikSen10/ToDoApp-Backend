package com.cakekart.CakeKartUserBackendApp.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.service.annotation.GetExchange;
import com.cakekart.CakeKartUserBackendApp.dao.*;
import com.cakekart.CakeKartUserBackendApp.security.JwtHelper;
import com.cakekart.CakeKartUserBackendApp.service.UserService;

@RestController
@RequestMapping("/user")
public class UserAuthController {

	@Autowired
	UserService userService;
	
	@Autowired
	private AuthenticationManager manager;
	
	@Autowired
	private UserDetailsService userDetailsService;
	
	@Autowired
	private JwtHelper helper;
	
	@PostMapping("/auth/login")
	public ResponseEntity<JwtResponse> login(@RequestBody JwtRequest request){
		this.doAuthenticate(request.getEmail(),request.getPassword());
		UserDetails userDetails = userDetailsService.loadUserByUsername(request.getEmail());
		String token = this.helper.generateToken(userDetails);
		JwtResponse response = new JwtResponse(userDetails.getUsername(),token);
		return new ResponseEntity<>(response,HttpStatus.OK);
	}
	private void doAuthenticate(String email, String password) {
		UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(email, password);
		try {
			manager.authenticate(authentication);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	@GetMapping("/users")
	public String getAllUsers(){
		System.out.println("In user controller");
//		for(User user: userService.getAllUser()) {
//			System.out.println(user);
//		}
		
		return userService.getAllUser();
	}
	
}
